!function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){(function(e,t){function o(e){var t=[];for(var n in e){if(!e.hasOwnProperty(n))return;e[n].path=n.replace(/.html$/,""),e[n].children&&(e[n].children=o(e[n].children)),t.push(e[n])}return t}function i(o,a){o.forEach(function(o){var r=a+"/"+(o.path||"index");o.children&&i(o.children,r),e("!"+r.replace("index",""),function(){var e=n(1)("./"+r.substr(1));$("#content").html(e({now:moment(),file:o,files:t})),$("a").removeClass("active"),$('a[href="#!'+r.replace("index","")+'"]').addClass("active"),$("pre code").each(function(e,t){hljs.highlightBlock(t)}),window.DISQUS&&$("#disqus_thread").length&&DISQUS.reset({reload:!0,config:function(){this.page.identifier=location.hash,this.page.url=location.href}})})})}var a={"format-date":function(e){return"string"==typeof e&&(e=moment(e)),e.format("LL")},"disqus-comments":function(){var e=n(2);return new Handlebars.SafeString(e())}};$(document).ready(function(){for(var n in a)a.hasOwnProperty(n)&&Handlebars.registerHelper(n,a[n]);i(o(t),""),e("*",function(){location.hash="#!/"})})}).call(t,n(10),n(3))},function(e,t,n){function o(e){return n(i(e))}function i(e){return a[e]||function(){throw new Error("Cannot find module '"+e+"'.")}()}var a={"./about":4,"./about.html":4,"./archive":5,"./archive.html":5,"./disqus":2,"./disqus.html":2,"./image":6,"./image.html":6,"./index":8,"./index.js":8,"./posts/how-i-have-built-this-blog":9,"./posts/how-i-have-built-this-blog.html":9};o.keys=function(){return Object.keys(a)},o.resolve=i,e.exports=o,o.id=1},function(e,t,n){e.exports=Handlebars.compile('<div id="disqus_thread"></div>\n')},function(e,t,n){!function(e){e.files={"about.html":{modified:"2015-04-26T15:35:07.772Z",created:"2015-04-26T15:35:07.772Z",title:""},"archive.html":{modified:"2015-04-25T02:05:05.652Z",created:"2015-04-25T02:05:05.704Z",title:""},"disqus.html":{modified:"2015-04-25T01:51:53.548Z",created:"2015-04-25T01:51:53.608Z",title:""},"image.html":{modified:"2015-04-25T02:10:54.504Z",created:"2015-04-25T02:10:54.504Z",title:""},img:{modified:"2015-04-24T18:02:26.972Z",created:"2015-04-24T18:19:02.864Z",children:{"mount-corcoran.jpg":{modified:"2015-04-24T18:01:55.064Z",created:"2015-04-24T18:02:26.972Z",title:""}}},"":{modified:"2015-04-24T18:26:39.408Z",created:"2015-04-24T18:26:39.532Z",title:""},posts:{modified:"2015-04-28T03:45:55.990Z",created:"2015-04-28T03:45:55.990Z",children:{"how-i-have-built-this-blog.html":{modified:"2015-04-28T03:45:55.910Z",created:"2015-04-28T03:45:55.986Z",title:"How I've built this static blog"}}}}}(this),e.exports=this.files},function(e,t,n){e.exports=Handlebars.compile('<h2>About</h2>\n\n<p class="text-lg">\n  I\'m a Python and Javascript developer. I have been working with a\n  great team on some <a href="http://www.stoq.com.br/">Stoq</a> side projects,\n  along with other independent projects. Most of my current work is being done\n  on the Web, either coding REST APIs or building frontend-heavy\n  applications with\n  <a href="http://emberjs.com/">EmberJS</a>,\n  <a href="http://backbonejs.org/">BackboneJS</a>,\n  <a href="https://facebook.github.io/react/">ReactJS</a>,\n  <a href="https://jquery.com/">jQuery</a>\n  or Javascript Vanilla\n</p>\n\n<p class="text-lg">\n  I\'ve decided to build this blog to share my thoughts with the World, either\n  by posting tutorials, philosophy or random stuff.\n</p>\n\n<p class="text-lg">\n  I currently live on São Carlos on the state of São Paulo (Brazil), where I\'ve\n  been doing my BSc in Computer Science degree.\n</p>\n\n<p class="text-lg" style="text-align: left">Nihey Takizawa</p>\n')},function(e,t,n){e.exports=Handlebars.compile('<h2>Archive</h2>\n<ul class="post-list">\n  {{#each files.posts.children}}\n    <li>{{format-date this.modified}} - <a href="#!/posts/{{ this.path }}">{{ this.title }}</a></li>\n  {{/each}}\n</ul>\n')},function(e,t,n){e.exports=Handlebars.compile('<img class="image" style="margin-top: 5em;" src="content/img/{{ img.path }}">\n<div style="text-align: center; margin-top: 1em">\n  "{{ quote }}"\n</div>\n')},,function(e,t,n){var o={"mount-corcoran.jpg":"Your mind will answer most questions if you learn to relax and wait for the answer."};e.exports=function(e){var t=e.files.img.children,i=t.length-1,a=t[Math.round(Math.random()*i)],r=n(6);return r({img:a,quote:o[a.path]})}},function(e,t,n){e.exports=Handlebars.compile('<h2 id="title">How I\'ve built this static blog</h2>\n<div class="date-title">{{format-date file.modified}}</div>\n<p>\n  I have been contemplating the idea of start blogging for some weeks, but one\n  of the things that worried me, is that I always found it really hard to\n  customize the platform I would use to blog. It takes time to fully understand\n  a platform like\n  <a href="https://wordpress.org/">Wordpress</a> or\n  <a href="https://ghost.org/">Ghost</a> - and even thought Ghost was made to be\n  easier for blogging, I would not be able to use a free static hosting\n  platform.\n</p>\n\n<p>\n  A better alternative would be the increasingly growing static platforms, like\n  <a href="http://jekyllrb.com/">Jekyll</a> or\n  <a href="http://octopress.org/">Octopress</a>. They make it fairly easily to\n  start blogging, along with the benefit of being able to host them on\n  <a href="https://pages.github.com/">GitHub pages</a> or another free static\n  hosting platform, along with writting your content in Markdown - very easy to\n  learn. It looks like a much better alternative, but I was concened about how\n  easily would I be able to hack into such platforms - like inserting custom\n  javascript code.\n</p>\n\n<p>\n  My tools of the trade on this job are (so far):\n  <ul>\n    <li><a href="http://webpack.github.io/">Webpack</a> - Bundles everything and provides <code class="borderless">require</code></li>\n    <li><a href="https://github.com/cheeriojs/cheerio">Cheerio</a> - jQuery-like parsing for NodeJS</li>\n    <li><a href="http://projects.jga.me/routie/">Routie</a> - Simple hash routing utility</li>\n    <li><a href="http://handlebarsjs.com/">Handlebars</a> - provides templating to our HTML</li>\n    <li><a href="http://momentjs.com/">Moment</a> - Better date and time parsing</li>\n  </ul>\n</p>\n\n<p>\n  So I\'ve built my own platform, inspired mostly by the simplicity of the\n  static platforms. My first question was: how would I be able to\n  browse through each file of this blog? I would need a index, a directory-like\n  data structure to make my application understand its data. So I\'ve started\n  building the indexer.js file.\n</p>\n\n<pre><code class="javascript">\nvar fs = require(\'fs\');\nvar path = require(\'path\');\nvar cheerio = require(\'cheerio\');\n\n/* Explores a directory and return all its tree\n *\n * @param dir Root directory to be explored\n */\nfunction getFiles(dir) {\n  var directory = {};\n  fs.readdirSync(dir).forEach(function(file) {\n    // Do not track hidden files and directories\n    if (file[0] === \'.\') {\n      return;\n    }\n\n    var fullPath = path.join(dir, file);\n    var filedata = fs.statSync(fullPath);\n    // index.html or index.js files are stated as root\n    file = file === \'index.html\' ? \'\' : file;\n    file = file === \'index.js\' ? \'\' : file;\n\n    directory[file] = {\n      modified: filedata.mtime,\n      created: filedata.birthtime\n    };\n\n    // Append child files for directories\n    if (filedata.isDirectory()) {\n      directory[file].children = getFiles(fullPath);\n      return;\n    }\n\n    // Add title metadata\n    directory[file].title = cheerio.load(fs.readFileSync(fullPath))(\'#title\').text();\n  });\n  return directory;\n}\n\n// Get all files on the content folder\nvar files = JSON.stringify(getFiles(\'content\'));\n\n// Send a minified initializer to the stdout\nconsole.log(\'(function(global){global.files=\' + files + \'})(this)\');\n</code></pre>\n\n<p class="subtitle">\n  <a href="https://github.com/nihey/blog/blob/6a085c93b3c23018bdd5bdb8ea45ad5957ff053c/indexer.js">indexer.js</a>\n  at {{format-date file.modified}}\n</p>\n\n<p>\n  So the index is returned on a Object structure, I could access the\n  <code class="borderless">posts/lipsum.html</code> file by accessing the Object\n  <code class="borderless">files.posts.children[\'lipsum.html\']</code>. I just\n  need to run <code class="borderless">node indexer.js > js/index.js</code>\n  whenever I create a new file.\n</p>\n\n<p>\n  After being able to access all the content of the blog, we should create a\n  some kind of structure to load the content inside of it. This is what the\n  <a href="https://github.com/nihey/blog/blob/6a085c93b3c23018bdd5bdb8ea45ad5957ff053c/js/blog.js">blog.js</a>\n  does. Specifically this part of the code:\n</p>\n\n<pre><code class="javascript">\n// Recursively register routes related to each file on the index\nfunction registerRoutes(files, basePath) {\n  files.forEach(function(file) {\n    // When path === \'\' we should take the index file as index\n    var path = basePath + \'/\' + (file.path || \'index\');\n\n    // Recursively register the routes for each child\n    if (file.children) {\n      registerRoutes(file.children, path);\n    }\n\n    // Bind the route to its corresponding file\n    routie(path.replace(\'index\', \'\'), function() {\n      // Retrieve the html (or js) of the corresponding route\n      var html = require(\'content/\' + path.substr(1));\n\n      // Execute the Handlebars template or javascript function and insert it\'s\n      // return content into the DOM.\n      $(\'#content\').html(html({\n        now: moment(),\n        file: file,\n        files: Files,\n      }));\n\n      // Just some additional styling for the currently activated routes\n      $(\'a\').removeClass(\'active\');\n      $(\'a[href="#\' + path.replace(\'index.html\', \'\') + \'"]\').addClass(\'active\');\n    });\n  });\n}\n</code></pre>\n\n<p class="subtitle">\n  <a href="https://github.com/nihey/blog/blob/6a085c93b3c23018bdd5bdb8ea45ad5957ff053c/js/blog.js">blog.js</a>\n  at {{format-date file.modified}}\n</p>\n\n<p>\n  After that, you\'ll notice that each route will be bound to the corresponding\n  html or js file on our content directory. As an example, this post\'s raw\n  content can be accessed\n  <a href="content/posts/how-i-have-built-this-blog.html">here</a>.\n</p>\n\n<p>\n  With that, I can now start building any page by just putting content into a\n  <a href="https://github.com/nihey/blog/tree/gh-pages/content">directory</a>.\n  A nice example is the <a href="content/index.js">index.js</a> file, a javascript file that\n  defines the <a href="#!/">home</a> route, it dynamically choses one image\n  from a directory and displays it on the page, along with a quote related to it.\n</p>\n\n<p>\n  I\'m really enjoying this structure so far, and I encourage anyone who knows\n  some Web development to build your own platform. It doesn\'t take much time,\n  and you\'ll total control over it.\n</p>\n\n<p>Some final thoughts onto this post:</p>\n<ul>\n  <li>\n    I\'ve just covered the basics on this project.\n  </li>\n  <li>\n    I later discovered that \'!\' prepended routes are make it easier for google\n    crawlers to understand this is another page, so you may boost your SEO.\n  </li>\n  <li>\n    You\'ll have to bundle your code with <a href="http://webpack.github.io/">Webpack</a>\n    or another tool that provides you the <code class="borderless">require</code>\n    function (AMD may be used as well)\n  </li>\n  <li>\n    I have some concerns about how the blog.min.js generated file may grow, and\n    how webpack will deal with this later, what do you think about this?\n    (either way, its a problem I\'ll deal with when the time comes)\n  </li>\n  <li>\n    If you are a good observer, you\'ll notice I created a Object structure on\n    <a href="https://github.com/nihey/blog/blob/6a085c93b3c23018bdd5bdb8ea45ad5957ff053c/indexer.js">indexer.js</a>\n    but on\n    <a href="https://github.com/nihey/blog/blob/6a085c93b3c23018bdd5bdb8ea45ad5957ff053c/js/blog.js">blog.js</a>\n    I use the <code class="borderless">Array.prototype.forEach</code> function, that\'s because a\n    little tweak using the <code class="borderless">getFilesList</code> function at\n    <a href="https://github.com/nihey/blog/blob/6a085c93b3c23018bdd5bdb8ea45ad5957ff053c/js/blog.js">blog.js</a>,\n    that leaves only the root directories being accessible via Object API (the\n    rest will be converted to an array structure).\n  </li>\n  <li>\n    Found a bug? Have any suggestion? Let me know on the\n    <a href="https://github.com/nihey/blog/issues">issues</a>.\n  </li>\n</ul>\n\n{{disqus-comments}}\n')},function(e,t,n){/*!
	 * routie - a tiny hash router
	 * v0.3.2
	 * http://projects.jga.me/routie
	 * copyright Greg Allen 2013
	 * MIT License
	*/
!function(e){var t=[],n={},o="routie",i=e[o],a=function(e,t){this.name=t,this.path=e,this.keys=[],this.fns=[],this.params={},this.regex=r(this.path,this.keys,!1,!1)};a.prototype.addHandler=function(e){this.fns.push(e)},a.prototype.removeHandler=function(e){for(var t=0,n=this.fns.length;n>t;t++){var o=this.fns[t];if(e==o)return void this.fns.splice(t,1)}},a.prototype.run=function(e){for(var t=0,n=this.fns.length;n>t;t++)this.fns[t].apply(this,e)},a.prototype.match=function(e,t){var n=this.regex.exec(e);if(!n)return!1;for(var o=1,i=n.length;i>o;++o){var a=this.keys[o-1],r="string"==typeof n[o]?decodeURIComponent(n[o]):n[o];a&&(this.params[a.name]=r),t.push(r)}return!0},a.prototype.toURL=function(e){var t=this.path;for(var n in e)t=t.replace("/:"+n,"/"+e[n]);if(t=t.replace(/\/:.*\?/g,"/").replace(/\?/g,""),-1!=t.indexOf(":"))throw Error("missing parameters for url: "+t);return t};var r=function(e,t,n,o){return e instanceof RegExp?e:(e instanceof Array&&(e="("+e.join("|")+")"),e=e.concat(o?"":"/?").replace(/\/\(/g,"(?:/").replace(/\+/g,"__plus__").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g,function(e,n,o,i,a,r){return t.push({name:i,optional:!!r}),n=n||"",""+(r?"":n)+"(?:"+(r?n:"")+(o||"")+(a||o&&"([^/.]+?)"||"([^/]+?)")+")"+(r||"")}).replace(/([\/.])/g,"\\$1").replace(/__plus__/g,"(.+)").replace(/\*/g,"(.*)"),RegExp("^"+e+"$",n?"":"i"))},s=function(e,o){var i=e.split(" "),r=2==i.length?i[0]:null;e=2==i.length?i[1]:i[0],n[e]||(n[e]=new a(e,r),t.push(n[e])),n[e].addHandler(o)},l=function(e,t){if("function"==typeof t)s(e,t),l.reload();else if("object"==typeof e){for(var n in e)s(n,e[n]);l.reload()}else void 0===t&&l.navigate(e)};l.lookup=function(e,n){for(var o=0,i=t.length;i>o;o++){var a=t[o];if(a.name==e)return a.toURL(n)}},l.remove=function(e,t){var o=n[e];o&&o.removeHandler(t)},l.removeAll=function(){n={},t=[]},l.navigate=function(e,t){t=t||{};var n=t.silent||!1;n&&u(),setTimeout(function(){window.location.hash=e,n&&setTimeout(function(){f()},1)},1)},l.noConflict=function(){return e[o]=i,l};var h=function(){return window.location.hash.substring(1)},c=function(e,t){var n=[];return t.match(e,n)?(t.run(n),!0):!1},d=l.reload=function(){for(var e=h(),n=0,o=t.length;o>n;n++){var i=t[n];if(c(e,i))return}},f=function(){e.addEventListener?e.addEventListener("hashchange",d,!1):e.attachEvent("onhashchange",d)},u=function(){e.removeEventListener?e.removeEventListener("hashchange",d):e.detachEvent("onhashchange",d)};f(),e[o]=l}(window),e.exports=window.routie}]);